name: tlz-checks

on:
  workflow_call:
    inputs:
      tf_workspace:
        type: string
        required: true
        description: Terraform Workspace
    secrets:
      tfe_token:
        required: true
        description: Terraform Enterprise API Token

env:
  TF_IN_AUTOMATION: true
  TF_INPUT: false
  TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
  TF_WORKSPACE: ${{ inputs.tf_workspace }}

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: cache terraform plugins
        uses: actions/cache@v2
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: install terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.tfe_token }}
          terraform_wrapper: false

      - name: terraform init
        run: terraform init

      - name: terraform plan
        uses: clickdealer/github-actions/.github/actions/tfe-remote-plan@v1
        with:
          output: plan.json
          tfe_token: ${{ secrets.tfe_token }}

      - name: upload plan artifact
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: plan.json
          if-no-files-found: error
          retention-days: 1

  checkov:
    runs-on: ubuntu-latest
    needs: initialize
    steps:
      - name: download plan artifact
        uses: actions/download-artifact@v2
        with:
          name: tfplan

      - name: checkov
        uses: bridgecrewio/checkov-action@v12.1211.0

  terrascan:
    runs-on: ubuntu-latest
    needs: initialize
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: download plan artifact
        uses: actions/download-artifact@v2
        with:
          name: tfplan

      - name: terrascan config file exists
        uses: andstor/file-existence-action@v1
        id: config_file
        with:
          files: .terrascan.yaml

      # hack as terrascan doesn't support 0.2 yet
      - name: set tfplan version to 0.1
        uses: jossef/action-set-json-field@v1
        with:
          file: plan.json
          field: format_version
          value: '0.1'

      - name: terrascan
        uses: accurics/terrascan-action@v1
        with:
          config_path: ${{ steps.config_file.outputs.files_exists == 'true' && '.terrascan.yaml' || null }}
          iac_dir: '. -f plan.json' # bit hacky, but it works...
          iac_type: tfplan

  tfdocs:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: terraform docs
        uses: terraform-docs/gh-actions@v0
        with:
          fail-on-diff: 'true'
          output-file: readme.md

  tffmt:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: terraform fmt
        uses: dflook/terraform-fmt-check@v1

  tflint:
    runs-on: ubuntu-latest
    needs: initialize
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: cache terraform plugins
        uses: actions/cache@v2
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: cache tflint plugins
        uses: actions/cache@v2
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: install terraform
        uses: hashicorp/setup-terraform@v1

      - name: terraform init
        run: terraform init -backend=false

      - name: install tflint
        uses: terraform-linters/setup-tflint@v1

      - name: tflint init
        run: tflint --init

      - name: tflint
        run: tflint -f compact

  tfsec:
    runs-on: ubuntu-latest
    needs: initialize
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: cache terraform plugins
        uses: actions/cache@v2
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: install terraform
        uses: hashicorp/setup-terraform@v1

      - name: terraform init
        run: terraform init -backend=false

      - name: tfsec
        uses: reviewdog/action-tfsec@v1
        with:
          github_token: ${{ secrets.github_token }}
          fail_on_error: 'true'

  tfvalidate:
    runs-on: ubuntu-latest
    needs: initialize
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: cache terraform plugins
        uses: actions/cache@v2
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

        # https://github.com/hashicorp/terraform/issues/28490
      - name: hack modules
        continue-on-error: true
        run: mv .github/tlz-checks/*.tf .

      - name: terraform validate
        uses: dflook/terraform-validate@v1
