name: gitops

on:
  workflow_call:
    inputs:
      dockerfile:
        description: File path to the dockerfile
        required: false
        type: string
        default: ./docker/Dockerfile
      docker_target:
        description: Set the target build stage to build
        required: false
        type: string
      image_repository:
        description: The ECR image repository name
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      k8s_repository:
        description: The GitHub repository name that holds the K8S manifests
        required: false
        type: string
        default: clickdealer/k8s-${{ github.event.repository.name }}
    secrets:
      DOCKER_BUILD_ARGS:
        description: Set build-time variables
        required: false
      K8S_GITHUB_TOKEN:
        description: GitHub token that has permission to push to the k8s repository
        required: true

jobs:
  build:
    runs-on: self-hosted
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    outputs:
      image: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_repository }}@${{ steps.docker_build.outputs.digest }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: v0.7.0

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_REGION: eu-west-2

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

      # hack, need to make this a little more generic
    - name: Download modules artifact
      if: github.repository == 'clickdealer/click-dms'
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.K8S_GITHUB_TOKEN }}
        repo: clickdealer/dms-modules
        workflow: ng-build.yaml
        branch: ${{ steps.extract_branch.outputs.branch }}
        run_id: 2166828701 #temp workaround
        name: ng-dist
        path: dms/public_html/modules

    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image_repository }}
        tag-edge: true
        tag-sha: true

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      env:
        NODE_OPTIONS: --max-old-space-size=8192 # was required for click-consumer-app
      with:
        push: true
        context: .
        file: ${{ inputs.dockerfile }}
        build-args: ${{ secrets.DOCKER_BUILD_ARGS }}
        target: ${{ inputs.docker_target }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}

  commit:
    runs-on: ubuntu-latest
    needs: build
    concurrency: ${{ inputs.k8s_repository }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.k8s_repository }}
        token: ${{ secrets.K8S_GITHUB_TOKEN }}

    - uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: 3.8.7

    - name: Update Image
      run: |
        BRANCH_NAME=${GITHUB_REF##*/}
        cd overlays/${BRANCH_NAME/master/production}
        kustomize edit set image ${{ needs.build.outputs.image }}

    - name: Commit files
      run: |
        git config --local user.email 41898282+github-actions[bot]@users.noreply.github.com
        git config --local user.name github-actions
        git add .
        git commit -m "Auto release ${GITHUB_REPOSITORY}@${GITHUB_SHA::8}" -m "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
        git push
